<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ubasic_8h" kind="file" language="C++">
    <compoundname>ubasic.h</compoundname>
    <includedby refid="kernel_8h" local="yes">kernel.h</includedby>
    <invincdepgraph>
      <node id="27">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>idt.h</label>
        <link refid="idt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
      </node>
      <node id="14">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ubasic.h</label>
        <link refid="ubasic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structfor__state" prot="public">for_state</innerclass>
    <innerclass refid="structub__var__int" prot="public">ub_var_int</innerclass>
    <innerclass refid="structub__var__double" prot="public">ub_var_double</innerclass>
    <innerclass refid="structub__var__string" prot="public">ub_var_string</innerclass>
    <innerclass refid="structub__param" prot="public">ub_param</innerclass>
    <innerclass refid="structub__proc__fn__def" prot="public">ub_proc_fn_def</innerclass>
    <innerclass refid="structub__var__int__array" prot="public">ub_var_int_array</innerclass>
    <innerclass refid="structub__var__string__array" prot="public">ub_var_string_array</innerclass>
    <innerclass refid="structub__var__double__array" prot="public">ub_var_double_array</innerclass>
    <innerclass refid="structub__line__ref" prot="public">ub_line_ref</innerclass>
    <innerclass refid="structubasic__ctx" prot="public">ubasic_ctx</innerclass>
    <innerclass refid="structubasic__int__fn" prot="public">ubasic_int_fn</innerclass>
    <innerclass refid="structubasic__double__fn" prot="public">ubasic_double_fn</innerclass>
    <innerclass refid="structubasic__str__fn" prot="public">ubasic_str_fn</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ubasic_8h_1a90bf9480b781825abfeb3f500d75531c" prot="public" static="no">
        <name>MAX_STRINGLEN</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="22" column="9" bodyfile="include/ubasic.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ubasic_8h_1aab086f9d28e5039a26d7fa99afa82fac" prot="public" static="no">
        <name>MAX_GOSUB_STACK_DEPTH</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="23" column="9" bodyfile="include/ubasic.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ubasic_8h_1afd61ad878c267312a7dfe05d09a67850" prot="public" static="no">
        <name>MAX_FOR_STACK_DEPTH</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="24" column="9" bodyfile="include/ubasic.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ubasic_8h_1a65231902c1f22532519da8a1c01ba53e" prot="public" static="no" strong="no">
        <type></type>
        <name>ub_fn_type</name>
        <enumvalue id="ubasic_8h_1a65231902c1f22532519da8a1c01ba53eac71ea04245e41b2d6b8e533fcc74c659" prot="public">
          <name>FT_FN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ubasic_8h_1a65231902c1f22532519da8a1c01ba53ead53af2599d572a45176f7076ae759bd6" prot="public">
          <name>FT_PROC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="54" column="1" bodyfile="include/ubasic.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="ubasic_8h_1a2279cec37b8a81d5f18e78d7335b1966" prot="public" static="no" strong="no">
        <type></type>
        <name>ub_return_type</name>
        <enumvalue id="ubasic_8h_1a2279cec37b8a81d5f18e78d7335b1966a0a653b41bba3d33c1017cbc8643c5268" prot="public">
          <name>RT_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ubasic_8h_1a2279cec37b8a81d5f18e78d7335b1966a8748e4019711d7c401d6ed2b1568717d" prot="public">
          <name>RT_INT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ubasic_8h_1a2279cec37b8a81d5f18e78d7335b1966af84eb2d6bedef8785a996abbec035e87" prot="public">
          <name>RT_FLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="59" column="1" bodyfile="include/ubasic.h" bodystart="59" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ubasic_8h_1a59c9cd726acfbe69d8df60ab2b2d0607" prot="public" static="no">
        <type>int64_t(*</type>
        <definition>typedef int64_t(* builtin_int_fn) (struct ubasic_ctx *ctx)</definition>
        <argsstring>)(struct ubasic_ctx *ctx)</argsstring>
        <name>builtin_int_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="140" column="9" bodyfile="include/ubasic.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ubasic_8h_1a32fb15d1935e217117fd02b2f319bb93" prot="public" static="no">
        <type>char *(*</type>
        <definition>typedef char*(* builtin_str_fn) (struct ubasic_ctx *ctx)</definition>
        <argsstring>)(struct ubasic_ctx *ctx)</argsstring>
        <name>builtin_str_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="141" column="9" bodyfile="include/ubasic.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ubasic_8h_1adccc7c01a1bb1d7cca42e285830ce6a6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* builtin_double_fn) (struct ubasic_ctx *ctx, double *res)</definition>
        <argsstring>)(struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>builtin_double_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="142" column="9" bodyfile="include/ubasic.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ubasic_8h_1a94cc5f368eb6a4a51959aa9af71c2727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_abs</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_abs</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="163" column="9" declfile="include/ubasic.h" declline="163" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1adcce1bf8e1bb7d43f778c2a3b178c38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_len</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_len</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="164" column="9" declfile="include/ubasic.h" declline="164" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1af6254c6c76a5252860e6de07c78eb39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_openin</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_openin</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="165" column="9" declfile="include/ubasic.h" declline="165" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1acca8b4cda5822d2e28342261eab74854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_openout</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_openout</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="166" column="9" declfile="include/ubasic.h" declline="166" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a7b3e5a5dfce2ebd585d9c02be65f6ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_openup</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_openup</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="167" column="9" declfile="include/ubasic.h" declline="167" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a431f36e09e8d38111a31f197e1105ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_eof</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_eof</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="168" column="9" declfile="include/ubasic.h" declline="168" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a9cc258913671c12ba9b33bf48e4671e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_read</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_read</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="169" column="9" declfile="include/ubasic.h" declline="169" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1ab8b600ea28480e317f45f1bf713a41b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_instr</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_instr</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="170" column="9" declfile="include/ubasic.h" declline="170" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1aab9b383fbcaccd9f3197620b11097ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_asc</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_asc</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="171" column="9" declfile="include/ubasic.h" declline="171" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1ad2d0c46d49cf770b5468e1cb3e7137a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_getnamecount</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_getnamecount</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="172" column="9" declfile="include/ubasic.h" declline="172" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a42187ca69dc53ce2869e7df6960dc7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_getsize</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_getsize</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="173" column="9" declfile="include/ubasic.h" declline="173" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1adc4d0576a6912532c43369e389419cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_get_text_max_x</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_get_text_max_x</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="174" column="9" declfile="include/ubasic.h" declline="174" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a9fd7bcca385683c102ac5cffc45f5898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_get_text_max_y</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_get_text_max_y</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="175" column="9" declfile="include/ubasic.h" declline="175" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a660422bd3c0e07831ab9a20bfd94db7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_netinfo</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_netinfo</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="178" column="6" declfile="include/ubasic.h" declline="178" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a5559407d22fff10ff141837c7b094fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_left</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_left</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="179" column="6" declfile="include/ubasic.h" declline="179" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a2ddbbc00e77a2b3575da968d1c719aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_mid</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_mid</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="180" column="6" declfile="include/ubasic.h" declline="180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a778c0201919e608abd2646c9b9cb0b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_chr</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_chr</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="181" column="6" declfile="include/ubasic.h" declline="181" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a5fad97e282aa0b13b8776eeeb505315c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_readstring</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_readstring</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="182" column="6" declfile="include/ubasic.h" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a628557296864cfb7a5a9a8ab38cce2b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_getname</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_getname</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="183" column="6" declfile="include/ubasic.h" declline="183" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a35b7dedd50cfc30346ac4881430b531b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
        <definition>struct ubasic_ctx* ubasic_init</definition>
        <argsstring>(const char *program, console *cons, uint32_t pid, const char *file, char **error)</argsstring>
        <name>ubasic_init</name>
        <param>
          <type>const char *</type>
          <declname>program</declname>
        </param>
        <param>
          <type><ref refid="structconsole" kindref="compound">console</ref> *</type>
          <declname>cons</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="185" column="18" declfile="include/ubasic.h" declline="185" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a21e82eb492a50cc82cbfac248d6b4785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_destroy</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_destroy</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="186" column="6" declfile="include/ubasic.h" declline="186" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a00ac2759ea41ff03f3e994f35f6bc03a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_run</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_run</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="187" column="6" declfile="include/ubasic.h" declline="187" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1ae2dfc2340f033d44a00993bfe4bf9c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ubasic_finished</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_finished</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="188" column="5" declfile="include/ubasic.h" declline="188" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1adb8eb6e0aa9c7606623fc241b99760be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_get_int_variable</definition>
        <argsstring>(const char *varname, struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_get_int_variable</name>
        <param>
          <type>const char *</type>
          <declname>varname</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="189" column="9" declfile="include/ubasic.h" declline="189" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a2fea34db30fac3281466a93c55078c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ubasic_get_double_variable</definition>
        <argsstring>(const char *var, struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>ubasic_get_double_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="190" column="6" declfile="include/ubasic.h" declline="190" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a9ac55179aa9a0176f342a67638608cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ubasic_get_string_variable</definition>
        <argsstring>(const char *var, struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_get_string_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="191" column="12" declfile="include/ubasic.h" declline="191" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a5dab8199fb7b2e99f20e8d8432b69b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_set_variable</definition>
        <argsstring>(const char *varname, const char *value, struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_set_variable</name>
        <param>
          <type>const char *</type>
          <declname>varname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="192" column="6" declfile="include/ubasic.h" declline="192" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1afcb910d7d9652ff94b305c3a8c398882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool jump_linenum</definition>
        <argsstring>(int64_t linenum, struct ubasic_ctx *ctx)</argsstring>
        <name>jump_linenum</name>
        <param>
          <type>int64_t</type>
          <declname>linenum</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="193" column="6" declfile="include/ubasic.h" declline="193" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a7913e05cee9dd3d85bc859e06af69f60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_set_string_variable</definition>
        <argsstring>(const char *var, const char *value, struct ubasic_ctx *ctx, bool local, bool global)</argsstring>
        <name>ubasic_set_string_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="194" column="6" declfile="include/ubasic.h" declline="194" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a387c29c224dd166b6bea4add9897522e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_set_double_variable</definition>
        <argsstring>(const char *var, const double value, struct ubasic_ctx *ctx, bool local, bool global)</argsstring>
        <name>ubasic_set_double_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="195" column="6" declfile="include/ubasic.h" declline="195" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a6d554a1fcd609a257c2f842a08ac05ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_set_int_variable</definition>
        <argsstring>(const char *var, int64_t value, struct ubasic_ctx *ctx, bool local, bool global)</argsstring>
        <name>ubasic_set_int_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="196" column="6" declfile="include/ubasic.h" declline="196" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1aeba4a7a47c9691fe982cfb3bcd98534b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_set_array_variable</definition>
        <argsstring>(const char *var, int64_t value, struct ubasic_ctx *ctx, bool local)</argsstring>
        <name>ubasic_set_array_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="197" column="6" declfile="include/ubasic.h" declline="197" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1af3c28214a6d26d3373d8ed9f1d5276a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ubasic_8h_1a2279cec37b8a81d5f18e78d7335b1966" kindref="member">ub_return_type</ref></type>
        <definition>ub_return_type ubasic_get_numeric_variable</definition>
        <argsstring>(const char *var, struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>ubasic_get_numeric_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="199" column="16" declfile="include/ubasic.h" declline="199" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a384d812b87f1117d47fe61d413b6763b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ubasic_get_numeric_int_variable</definition>
        <argsstring>(const char *var, struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_get_numeric_int_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="200" column="5" declfile="include/ubasic.h" declline="200" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a934280027312e986008618e74b82782e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t expr</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>expr</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="202" column="9" declfile="include/ubasic.h" declline="202" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a1e46aaf021f5d93d251df94cbe164e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void double_expr</definition>
        <argsstring>(struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>double_expr</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="203" column="6" declfile="include/ubasic.h" declline="203" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a84e680982e0290ec61df8b84dca64588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void line_statement</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>line_statement</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="204" column="6" declfile="include/ubasic.h" declline="204" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a2034463854d3258a38238de07f3049fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void statement</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>statement</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="205" column="6" declfile="include/ubasic.h" declline="205" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a5f32d6049526ddd7e979e741ba73053e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * str_expr</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>str_expr</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="206" column="12" declfile="include/ubasic.h" declline="206" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1af865ac3ed5536e2dc99cfbb4d902ae4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* str_varfactor</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>str_varfactor</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="207" column="12" declfile="include/ubasic.h" declline="207" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a6ce4459f3701be5c97c7f9908bf0c259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_parse_fn</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_parse_fn</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="208" column="6" declfile="include/ubasic.h" declline="208" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a3b993cc07b1f0d7deb322edc1578fdf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_getproccount</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_getproccount</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="209" column="9" declfile="include/ubasic.h" declline="209" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a28b9bd6cdb5c5e3cb2d94830df2354c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_getprocid</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_getprocid</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="210" column="9" declfile="include/ubasic.h" declline="210" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1ad6905e50078318caf5db72a91748c697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_getprocname</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_getprocname</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="211" column="6" declfile="include/ubasic.h" declline="211" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a63d3193d934771514392dcd19b13fe32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_dns</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_dns</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="212" column="6" declfile="include/ubasic.h" declline="212" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a773791be71cc0db044c07e3d39290e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ubasic_rgb</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_rgb</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="213" column="9" declfile="include/ubasic.h" declline="213" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a5ce0ab5acfae5031b62200a2f6bf97f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_eval_double_fn</definition>
        <argsstring>(const char *fn_name, struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>ubasic_eval_double_fn</name>
        <param>
          <type>const char *</type>
          <declname>fn_name</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="214" column="6" declfile="include/ubasic.h" declline="214" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a4865c0eb38ab199e7adca32b4c777385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ubasic_test_string_variable</definition>
        <argsstring>(const char *var, struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_test_string_variable</name>
        <param>
          <type>const char *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="215" column="12" declfile="include/ubasic.h" declline="215" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a05da1e347cfc8fbe0098c51316ed2640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_sin</definition>
        <argsstring>(struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>ubasic_sin</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="218" column="6" declfile="include/ubasic.h" declline="218" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a8146f852198c2a7936d9e6088ac0dfd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_cos</definition>
        <argsstring>(struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>ubasic_cos</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="219" column="6" declfile="include/ubasic.h" declline="219" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a7b786c07e1ca434cd8e5942bc74e4497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_tan</definition>
        <argsstring>(struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>ubasic_tan</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="220" column="6" declfile="include/ubasic.h" declline="220" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1ad79849ce5ab570769fddacecced88c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ubasic_pow</definition>
        <argsstring>(struct ubasic_ctx *ctx, double *res)</argsstring>
        <name>ubasic_pow</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="221" column="6" declfile="include/ubasic.h" declline="221" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1ac569cb0c5dcad1f65f0eb87849978161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int str_relation</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>str_relation</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="223" column="5" declfile="include/ubasic.h" declline="223" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a5da3876b5bfc761a6407ac2020521e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int relation</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>relation</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="224" column="5" declfile="include/ubasic.h" declline="224" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a39ca76350b51eb1ac4f85f7813030be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void accept</definition>
        <argsstring>(int token, struct ubasic_ctx *ctx)</argsstring>
        <name>accept</name>
        <param>
          <type>int</type>
          <declname>token</declname>
        </param>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="229" column="6" declfile="include/ubasic.h" declline="229" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1acd2949249723baac22db2449ccc05d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_ramdisk_from_device</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_ramdisk_from_device</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="231" column="6" declfile="include/ubasic.h" declline="231" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ubasic_8h_1a7a221e39127dcc2f13c7828843c534b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ubasic_ramdisk_from_size</definition>
        <argsstring>(struct ubasic_ctx *ctx)</argsstring>
        <name>ubasic_ramdisk_from_size</name>
        <param>
          <type>struct <ref refid="structubasic__ctx" kindref="compound">ubasic_ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ubasic.h" line="232" column="6" declfile="include/ubasic.h" declline="232" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>BBC BASIC interpreter, Retro Rocket OS Project (C) Craig Edwards 2012. loosely based on uBASIC (Copyright (c) 2006, Adam Dunkels, All rights reserved).</para>
<para>THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS `<lsquo/>AS IS<rsquo/>&apos; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </para>
    </detaileddescription>
    <location file="include/ubasic.h"/>
  </compounddef>
</doxygen>
