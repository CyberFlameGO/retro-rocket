<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hashmap_8h" kind="file" language="C++">
    <compoundname>hashmap.h</compoundname>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="kernel_8h" local="yes">kernel.h</includedby>
    <incdepgraph>
      <node id="23">
        <label>ata.h</label>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="38">
        <label>acpi.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>arp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>dns.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>fat32.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>udp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>iso9660.h</label>
      </node>
      <node id="9">
        <label>spinlock.h</label>
      </node>
      <node id="45">
        <label>tcp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>devicename.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>idt.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="50">
        <label>drawing.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>rtl8139.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ioapic.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="36">
        <label>tokenizer.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="31">
        <label>keyboard.h</label>
      </node>
      <node id="13">
        <label>io.h</label>
      </node>
      <node id="10">
        <label>printf.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>e1000.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>lapic_timer.h</label>
      </node>
      <node id="7">
        <label>limine.h</label>
      </node>
      <node id="32">
        <label>input.h</label>
      </node>
      <node id="51">
        <label>fpu.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>video.h</label>
      </node>
      <node id="46">
        <label>icmp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ip.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>filesystem.h</label>
      </node>
      <node id="27">
        <label>devfs.h</label>
      </node>
      <node id="30">
        <label>errorhandler.h</label>
      </node>
      <node id="35">
        <label>ubasic.h</label>
      </node>
      <node id="44">
        <label>ethernet.h</label>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>memcpy.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>partition.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>taskswitch.h</label>
      </node>
      <node id="1">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>net.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>timer.h</label>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>debugger.h</label>
      </node>
      <node id="21">
        <label>interrupt.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>kmalloc.h</label>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>pci.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>apic.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="22">
        <label>ahci.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>dhcp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>clock.h</label>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>acpi.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>arp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>dns.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>fat32.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>udp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tcp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>devicename.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>idt.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>drawing.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>rtl8139.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tokenizer.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>printf.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>e1000.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>fpu.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>icmp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ip.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ethernet.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>memcpy.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>partition.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>net.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>interrupt.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>pci.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ahci.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>dhcp.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>clock.h</label>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="hashmap_8h_1a101011257b715d9425f1d26d34f94bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct hashmap *</type>
        <definition>struct hashmap* hashmap_new</definition>
        <argsstring>(size_t elsize, size_t cap, uint64_t seed0, uint64_t seed1, uint64_t(*hash)(const void *item, uint64_t seed0, uint64_t seed1), int(*compare)(const void *a, const void *b, void *udata), void(*elfree)(void *item), void *udata)</argsstring>
        <name>hashmap_new</name>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cap</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <param>
          <type>uint64_t(*)(const void *item, uint64_t seed0, uint64_t seed1)</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int(*)(const void *a, const void *b, void *udata)</type>
          <declname>compare</declname>
        </param>
        <param>
          <type>void(*)(void *item)</type>
          <declname>elfree</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>udata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="17" column="14" declfile="include/hashmap.h" declline="17" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a2c5c11e3f02309391e351f33df96c1bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct hashmap *</type>
        <definition>struct hashmap* hashmap_new_with_allocator</definition>
        <argsstring>(void *(*malloc)(size_t), void *(*realloc)(void *, size_t), void(*free)(void *), size_t elsize, size_t cap, uint64_t seed0, uint64_t seed1, uint64_t(*hash)(const void *item, uint64_t seed0, uint64_t seed1), int(*compare)(const void *a, const void *b, void *udata), void(*elfree)(void *item), void *udata)</argsstring>
        <name>hashmap_new_with_allocator</name>
        <param>
          <type>void *(*)(size_t)</type>
          <declname>malloc</declname>
        </param>
        <param>
          <type>void *(*)(void *, size_t)</type>
          <declname>realloc</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>free</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cap</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <param>
          <type>uint64_t(*)(const void *item, uint64_t seed0, uint64_t seed1)</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int(*)(const void *a, const void *b, void *udata)</type>
          <declname>compare</declname>
        </param>
        <param>
          <type>void(*)(void *item)</type>
          <declname>elfree</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>udata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="25" column="14" declfile="include/hashmap.h" declline="25" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a97ab64db6070065a0e8b5afc23793342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashmap_free</definition>
        <argsstring>(struct hashmap *map)</argsstring>
        <name>hashmap_free</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="37" column="6" declfile="include/hashmap.h" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1ab09b4f126a08c1e716bac424b1927f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashmap_clear</definition>
        <argsstring>(struct hashmap *map, bool update_cap)</argsstring>
        <name>hashmap_clear</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>update_cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="38" column="6" declfile="include/hashmap.h" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1acf2d7645190129fb4880ba452c6436ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hashmap_count</definition>
        <argsstring>(struct hashmap *map)</argsstring>
        <name>hashmap_count</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="39" column="8" declfile="include/hashmap.h" declline="39" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1ad07477cf9562c5c78b5dcde3ccf8aced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashmap_oom</definition>
        <argsstring>(struct hashmap *map)</argsstring>
        <name>hashmap_oom</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="40" column="6" declfile="include/hashmap.h" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a85a95e15442ce2e8101d4306119ca62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_get</definition>
        <argsstring>(struct hashmap *map, const void *item)</argsstring>
        <name>hashmap_get</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="41" column="6" declfile="include/hashmap.h" declline="41" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a3f0cd71606aace704e5381aa88f5bf79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_set</definition>
        <argsstring>(struct hashmap *map, const void *item)</argsstring>
        <name>hashmap_set</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="42" column="6" declfile="include/hashmap.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a996e7ad281b47f679925c5b32b5613b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_delete</definition>
        <argsstring>(struct hashmap *map, void *item)</argsstring>
        <name>hashmap_delete</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="43" column="6" declfile="include/hashmap.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1aad3c9111f88493b810d832bb2e61b523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* hashmap_probe</definition>
        <argsstring>(struct hashmap *map, uint64_t position)</argsstring>
        <name>hashmap_probe</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="44" column="6" declfile="include/hashmap.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a43b4811046853d778bde1c2077b36f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashmap_scan</definition>
        <argsstring>(struct hashmap *map, bool(*iter)(const void *item, void *udata), void *udata)</argsstring>
        <name>hashmap_scan</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>bool(*)(const void *item, void *udata)</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>udata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="45" column="6" declfile="include/hashmap.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1abc4cede290fdcdc96168de2c86373882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hashmap_iter</definition>
        <argsstring>(struct hashmap *map, size_t *i, void **item)</argsstring>
        <name>hashmap_iter</name>
        <param>
          <type>struct hashmap *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="47" column="6" declfile="include/hashmap.h" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a9a8e35929f3fa17f10b93594e89e98ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hashmap_sip</definition>
        <argsstring>(const void *data, size_t len, uint64_t seed0, uint64_t seed1)</argsstring>
        <name>hashmap_sip</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="49" column="10" declfile="include/hashmap.h" declline="49" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a0ad2116023e2861efbaeeb332e2bef24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hashmap_murmur</definition>
        <argsstring>(const void *data, size_t len, uint64_t seed0, uint64_t seed1)</argsstring>
        <name>hashmap_murmur</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>seed1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="51" column="10" declfile="include/hashmap.h" declline="51" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hashmap_8h_1a50515f0051f7822eafb0f977a1e12b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hashmap_set_allocator</definition>
        <argsstring>(void *(*malloc)(size_t), void(*free)(void *))</argsstring>
        <name>hashmap_set_allocator</name>
        <param>
          <type>void *(*)(size_t)</type>
          <declname>malloc</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>free</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hashmap.h" line="56" column="6" declfile="include/hashmap.h" declline="56" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/hashmap.h"/>
  </compounddef>
</doxygen>
